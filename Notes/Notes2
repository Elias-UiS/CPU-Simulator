Kan bruke pub-sub, men da må jeg enter ha en update funksjon for hver variable?
Kan istedenfor med pub-sub, sende inn hele structed i parameteren?

Kan bruke channels, da igjen samme som over, enten mange funskjoner, eller sende struct.

Kan bruke manuelt binding.set, i programmvaren, f.eks cpu.
Prøvde ut dette i cpuen.
bindings.AcBinding.Set

Må uansett bruke dette med channels/pub-sub, men da skjer ikke dette under cpu-kjøringen.
Gjort channels i process Metrics delen.



Hvis scheduleren tar i bruk flere kø-er,
kan jeg endre scheduler interfacen, til å trenge en GetReadyQueueList.
Slik at det blir returnert en liste av queues (list of lists)
Da kan jeg vise dette på dashboardet uten problemer.


Tanker om locks:
Årsaken til jeg ikke hadde tenkt på det, er at det ikke påvirker driften/resultatet.
Så hvis dashboarded leser en "gammel" verdi, er ikke dette et problem,
forutenom at du ser en litt gammel verdi. Men dette er rent teroretisk, i praksis vil det ikke forekomme noen lesefeil.

Liste over hva artitektur innebærer?
Hvilke funksjoner jeg trenger. 


Om memory, hvordan skal jeg fikse memory allocation?
Jeg tenkte at i selve instructionen skal jeg sende inn som en parameter til mmu om hvilke type memory dette er(code,heap, stack).
Deretter under tranlation, kan han se at oi, du har nå gått i en annen type enn din egen. Deretter kan jeg allokere mer om den ønsker.
Men her er problemet. Hvordan skal jeg da gjøre addresering?
Til nå må brukeren selv finne ut hvor i den virtualle minne den skal i.
Skal jeg ha i addresen, at de første 2 bitsa, forklarer hvilken type det er(ikke hvor i minne den skal, men bare for å oppklare typen). Deretter skal de neste x bitsa, være addressen fra første code, heap, stack del. Da alle starter på addresse 0, men mmu vet at den skal til første tilgjengelig page med riktig type?
Da lurer jeg litt hvordan stacken skal fungere, da den starter på "MAX" addresse.
